{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","íd","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA7BK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE/BC,EAF+B,KAElBC,EAFkB,KActC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAqBO,OAC9CN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACPU,SAfa,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCWjBG,EAlBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACXC,QAAQC,IAAI,qCAAuCH,GAC1CI,EAFE,iDAE+CC,UAAWL,GAF1D,sDAGRE,QAAQC,IAAIC,GAHJ,SAIWE,MAAOF,GAJlB,cAIFG,EAJE,gBAKaA,EAAKC,OALlB,uBAKDC,EALC,EAKDA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXlC,kBAeDM,GAfC,4CAAH,sDCqBEO,EApBM,SAAEjB,GAAc,IAAD,EACRd,mBAAS,CAChCuB,KAAM,GACNS,SAAS,IAHsB,mBAC5BC,EAD4B,KACpBC,EADoB,KAgBnC,OAVAC,qBAAU,WACHtB,EAASC,GACPsB,MAAM,SAAAC,GACJH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGrB,CAAElB,IAEEmB,GCPOK,EAVK,SAAC,GAAqB,EAAnBC,QAAoB,IAAhBX,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAE9B,OACI,sBAAKsB,UAAU,2CAAf,UACI,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,mCAAMA,EAAN,WCmBGe,EAtBC,SAAC,GAAiB,IAAf7B,EAAc,EAAdA,SAAc,EAEMiB,EAAcjB,GAApCe,EAFgB,EAErBN,KAAcS,EAFO,EAEPA,QAEtB,OACI,qCACI,mCAAMlB,EAAN,OACCkB,GAAW,eACZ,qBAAKQ,UAAU,gDAAf,SAEQX,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCctBiB,EAzBM,WAAM,IAAD,EACe5C,mBAAS,CAAC,SADzB,mBACfQ,EADe,KACFT,EADE,KAItB,OACI,qCACI,2CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWiB,KAAK,SAAAX,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCZjC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c48630a9.chunk.js","sourcesContent":["import React , {useState} from'react';\r\nimport ProTypes from'prop-types';\r\n\r\n\r\nconst AddCategory = ( {setCategories} ) =>{\r\n    \r\n    const [inputValue , setInputValue] = useState(''); \r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value )\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue , ...categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                 onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: ProTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nconst getGifs = async ( category)=>{\r\n     console.log(\"estoy en gef gif y la categoria es\" + category);\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=u6bmJrh5mAPwTXFEUXo6lHHkPq53z0K4`;\r\n        console.log(url);\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json(); \r\n        \r\n        const gifs = data.map( img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n}\r\n\r\nexport default getGifs;","import {useState ,useEffect} from'react';\r\nimport getGifs from './../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) =>{\r\n const [state , setState] = useState({\r\n     data: [],\r\n     loading: true\r\n });\r\n\r\n useEffect(()=>{\r\n        getGifs( category )\r\n         .then( imgs => {\r\n            setState({\r\n                data: imgs ,\r\n                loading: false\r\n            })\r\n         })\r\n} , [ category ]);\r\n\r\n return state;\r\n}\r\n\r\n\r\nexport default useFetchGifs;","import React from'react';\r\n\r\nconst GifGridItem = ( {íd, title, url}) =>{\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__bounceIn card\">\r\n            <img src={url} alt={title}/>\r\n            <h3> {title} </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","import React from'react'\r\nimport useFetchGifs from './../hooks/useFetchGifs.js';\r\nimport GifGridItem from'./GifGridItem';\r\n// import getGifs from'./../helpers/getGifs.js';\r\nconst GifGrid = ({ category }) =>{\r\n\r\n    const { data:images , loading } =  useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && 'cargando....'}\r\n            <div className=\"card-grid animate__animated animate__bounceIn\">\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;","import React, { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport AddCategory from './components/AddCategory.js';\r\nimport GifGrid from'./components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n    const [categories , setCategories] = useState(['goku']);\r\n\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpert</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.js';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}